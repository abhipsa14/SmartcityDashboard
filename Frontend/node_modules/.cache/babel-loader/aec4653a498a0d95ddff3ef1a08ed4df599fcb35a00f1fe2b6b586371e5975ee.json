{"ast":null,"code":"var _jsxFileName = \"/home/atul-maurya/Downloads/GHG2/Frontend/src/layouts/auth/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport routes from 'routes.js';\n\n// Chakra imports\nimport { Box, useColorModeValue } from '@chakra-ui/react';\n\n// Layout components\nimport { SidebarContext } from 'contexts/SidebarContext';\n\n// Custom Chakra theme\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Auth() {\n  _s();\n  // states and functions\n  const [toggleSidebar, setToggleSidebar] = useState(false);\n  // functions for changing the states from components\n  const getRoute = () => {\n    return window.location.pathname !== '/auth/full-screen-maps';\n  };\n  const getRoutes = routes => {\n    return routes.map((route, key) => {\n      if (route.layout === '/auth') {\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: `${route.path}`,\n          element: route.component\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this);\n      }\n      if (route.collapse) {\n        return getRoutes(route.items);\n      } else {\n        return null;\n      }\n    });\n  };\n  const authBg = useColorModeValue('white', 'navy.900');\n  document.documentElement.dir = 'ltr';\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(SidebarContext.Provider, {\n      value: {\n        toggleSidebar,\n        setToggleSidebar\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        bg: authBg,\n        float: \"right\",\n        minHeight: \"100vh\",\n        height: \"100%\",\n        position: \"relative\",\n        w: \"100%\",\n        transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\",\n        transitionDuration: \".2s, .2s, .35s\",\n        transitionProperty: \"top, bottom, width\",\n        transitionTimingFunction: \"linear, linear, ease\",\n        children: getRoute() ? /*#__PURE__*/_jsxDEV(Box, {\n          mx: \"auto\",\n          minH: \"100vh\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [getRoutes(routes), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Navigate, {\n                to: \"/auth/sign-in/default\",\n                replace: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Auth, \"3I86qunVRS6hp1k2UiAtk/vWUAE=\", false, function () {\n  return [useColorModeValue];\n});\n_c = Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","Navigate","Route","Routes","routes","Box","useColorModeValue","SidebarContext","jsxDEV","_jsxDEV","Auth","_s","toggleSidebar","setToggleSidebar","getRoute","window","location","pathname","getRoutes","map","route","key","layout","path","element","component","fileName","_jsxFileName","lineNumber","columnNumber","collapse","items","authBg","document","documentElement","dir","children","Provider","value","bg","float","minHeight","height","position","w","transition","transitionDuration","transitionProperty","transitionTimingFunction","mx","minH","to","replace","_c","$RefreshReg$"],"sources":["/home/atul-maurya/Downloads/GHG2/Frontend/src/layouts/auth/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport routes from 'routes.js';\n\n// Chakra imports\nimport { Box, useColorModeValue } from '@chakra-ui/react';\n\n// Layout components\nimport { SidebarContext } from 'contexts/SidebarContext';\n\n// Custom Chakra theme\nexport default function Auth() {\n  // states and functions\n  const [toggleSidebar, setToggleSidebar] = useState(false);\n  // functions for changing the states from components\n  const getRoute = () => {\n    return window.location.pathname !== '/auth/full-screen-maps';\n  };\n  const getRoutes = (routes) => {\n    return routes.map((route, key) => {\n      if (route.layout === '/auth') {\n        return (\n          <Route path={`${route.path}`} element={route.component} key={key} />\n        );\n      }\n      if (route.collapse) {\n        return getRoutes(route.items);\n      } else {\n        return null;\n      }\n    });\n  };\n  const authBg = useColorModeValue('white', 'navy.900');\n  document.documentElement.dir = 'ltr';\n  return (\n    <Box>\n      <SidebarContext.Provider\n        value={{\n          toggleSidebar,\n          setToggleSidebar,\n        }}\n      >\n        <Box\n          bg={authBg}\n          float=\"right\"\n          minHeight=\"100vh\"\n          height=\"100%\"\n          position=\"relative\"\n          w=\"100%\"\n          transition=\"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\n          transitionDuration=\".2s, .2s, .35s\"\n          transitionProperty=\"top, bottom, width\"\n          transitionTimingFunction=\"linear, linear, ease\"\n        >\n          {getRoute() ? (\n            <Box mx=\"auto\" minH=\"100vh\">\n              <Routes>\n                {getRoutes(routes)}\n                <Route\n                  path=\"/\"\n                  element={<Navigate to=\"/auth/sign-in/default\" replace />}\n                />\n              </Routes>\n            </Box>\n          ) : null}\n        </Box>\n      </SidebarContext.Provider>\n    </Box>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}