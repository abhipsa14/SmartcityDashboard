{"ast":null,"code":"var _jsxFileName = \"/home/atul-maurya/Downloads/GHG2/Frontend/src/components/sidebar/components/Links.js\",\n  _s = $RefreshSig$();\n/* eslint-disable */\nimport React from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\n// chakra imports\nimport { Box, Flex, HStack, Text, useColorModeValue } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function SidebarLinks(props) {\n  _s();\n  //   Chakra color mode\n  let location = useLocation();\n  let activeColor = useColorModeValue(\"gray.700\", \"white\");\n  let inactiveColor = useColorModeValue(\"secondaryGray.600\", \"secondaryGray.600\");\n  let activeIcon = useColorModeValue(\"brand.500\", \"white\");\n  let textColor = useColorModeValue(\"secondaryGray.500\", \"white\");\n  let brandColor = useColorModeValue(\"brand.500\", \"brand.400\");\n  const {\n    routes\n  } = props;\n\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = routeName => {\n    return location.pathname.includes(routeName);\n  };\n\n  // this function creates the links from the secondary accordions (for example auth -> sign-in -> default)\n  const createLinks = routes => {\n    return routes.map((route, index) => {\n      if (route.category) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"md\",\n            color: activeColor,\n            fontWeight: \"bold\",\n            mx: \"auto\",\n            ps: {\n              sm: \"10px\",\n              xl: \"16px\"\n            },\n            pt: \"18px\",\n            pb: \"12px\",\n            children: route.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), createLinks(route.items)]\n        }, void 0, true);\n      } else if (route.layout === \"/admin\" || route.layout === \"/auth\" || route.layout === \"/rtl\") {\n        return /*#__PURE__*/_jsxDEV(NavLink, {\n          to: route.layout + route.path,\n          children: route.icon ? /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(HStack, {\n              spacing: activeRoute(route.path.toLowerCase()) ? \"22px\" : \"26px\",\n              py: \"5px\",\n              ps: \"10px\",\n              children: [/*#__PURE__*/_jsxDEV(Flex, {\n                w: \"100%\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  color: activeRoute(route.path.toLowerCase()) ? activeIcon : textColor,\n                  me: \"18px\",\n                  children: route.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  me: \"auto\",\n                  color: activeRoute(route.path.toLowerCase()) ? activeColor : textColor,\n                  fontWeight: activeRoute(route.path.toLowerCase()) ? \"bold\" : \"normal\",\n                  children: route.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                h: \"36px\",\n                w: \"4px\",\n                bg: activeRoute(route.path.toLowerCase()) ? brandColor : \"transparent\",\n                borderRadius: \"5px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(HStack, {\n              spacing: activeRoute(route.path.toLowerCase()) ? \"22px\" : \"26px\",\n              py: \"5px\",\n              ps: \"10px\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                me: \"auto\",\n                color: activeRoute(route.path.toLowerCase()) ? activeColor : inactiveColor,\n                fontWeight: activeRoute(route.path.toLowerCase()) ? \"bold\" : \"normal\",\n                children: route.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                h: \"36px\",\n                w: \"4px\",\n                bg: \"brand.400\",\n                borderRadius: \"5px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  //  BRAND\n  return createLinks(routes);\n}\n_s(SidebarLinks, \"KVhpCJdjusCCFRapSNvU+NIXlxQ=\", false, function () {\n  return [useLocation, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue];\n});\n_c = SidebarLinks;\nexport default SidebarLinks;\nvar _c;\n$RefreshReg$(_c, \"SidebarLinks\");","map":{"version":3,"names":["React","NavLink","useLocation","Box","Flex","HStack","Text","useColorModeValue","jsxDEV","_jsxDEV","Fragment","_Fragment","SidebarLinks","props","_s","location","activeColor","inactiveColor","activeIcon","textColor","brandColor","routes","activeRoute","routeName","pathname","includes","createLinks","map","route","index","category","children","fontSize","color","fontWeight","mx","ps","sm","xl","pt","pb","name","fileName","_jsxFileName","lineNumber","columnNumber","items","layout","to","path","icon","spacing","toLowerCase","py","w","alignItems","justifyContent","me","h","bg","borderRadius","_c","$RefreshReg$"],"sources":["/home/atul-maurya/Downloads/GHG2/Frontend/src/components/sidebar/components/Links.js"],"sourcesContent":["/* eslint-disable */\nimport React from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\n// chakra imports\nimport { Box, Flex, HStack, Text, useColorModeValue } from \"@chakra-ui/react\";\n\nexport function SidebarLinks(props) {\n  //   Chakra color mode\n  let location = useLocation();\n  let activeColor = useColorModeValue(\"gray.700\", \"white\");\n  let inactiveColor = useColorModeValue(\n    \"secondaryGray.600\",\n    \"secondaryGray.600\"\n  );\n  let activeIcon = useColorModeValue(\"brand.500\", \"white\");\n  let textColor = useColorModeValue(\"secondaryGray.500\", \"white\");\n  let brandColor = useColorModeValue(\"brand.500\", \"brand.400\");\n\n  const { routes } = props;\n\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname.includes(routeName);\n  };\n\n  // this function creates the links from the secondary accordions (for example auth -> sign-in -> default)\n  const createLinks = (routes) => {\n    return routes.map((route, index) => {\n      if (route.category) {\n        return (\n          <>\n            <Text\n              fontSize={\"md\"}\n              color={activeColor}\n              fontWeight='bold'\n              mx='auto'\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              pt='18px'\n              pb='12px'\n              key={index}>\n              {route.name}\n            </Text>\n            {createLinks(route.items)}\n          </>\n        );\n      } else if (\n        route.layout === \"/admin\" ||\n        route.layout === \"/auth\" ||\n        route.layout === \"/rtl\"\n      ) {\n        return (\n          <NavLink key={index} to={route.layout + route.path}>\n            {route.icon ? (\n              <Box>\n                <HStack\n                  spacing={\n                    activeRoute(route.path.toLowerCase()) ? \"22px\" : \"26px\"\n                  }\n                  py='5px'\n                  ps='10px'>\n                  <Flex w='100%' alignItems='center' justifyContent='center'>\n                    <Box\n                      color={\n                        activeRoute(route.path.toLowerCase())\n                          ? activeIcon\n                          : textColor\n                      }\n                      me='18px'>\n                      {route.icon}\n                    </Box>\n                    <Text\n                      me='auto'\n                      color={\n                        activeRoute(route.path.toLowerCase())\n                          ? activeColor\n                          : textColor\n                      }\n                      fontWeight={\n                        activeRoute(route.path.toLowerCase())\n                          ? \"bold\"\n                          : \"normal\"\n                      }>\n                      {route.name}\n                    </Text>\n                  </Flex>\n                  <Box\n                    h='36px'\n                    w='4px'\n                    bg={\n                      activeRoute(route.path.toLowerCase())\n                        ? brandColor\n                        : \"transparent\"\n                    }\n                    borderRadius='5px'\n                  />\n                </HStack>\n              </Box>\n            ) : (\n              <Box>\n                <HStack\n                  spacing={\n                    activeRoute(route.path.toLowerCase()) ? \"22px\" : \"26px\"\n                  }\n                  py='5px'\n                  ps='10px'>\n                  <Text\n                    me='auto'\n                    color={\n                      activeRoute(route.path.toLowerCase())\n                        ? activeColor\n                        : inactiveColor\n                    }\n                    fontWeight={\n                      activeRoute(route.path.toLowerCase()) ? \"bold\" : \"normal\"\n                    }>\n                    {route.name}\n                  </Text>\n                  <Box h='36px' w='4px' bg='brand.400' borderRadius='5px' />\n                </HStack>\n              </Box>\n            )}\n          </NavLink>\n        );\n      }\n    });\n  };\n  //  BRAND\n  return createLinks(routes);\n}\n\nexport default SidebarLinks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}