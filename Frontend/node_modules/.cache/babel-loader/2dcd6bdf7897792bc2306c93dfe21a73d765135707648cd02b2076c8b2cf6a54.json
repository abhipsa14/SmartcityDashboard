{"ast":null,"code":"var _jsxFileName = \"/home/atul-maurya/Downloads/GHG2/Frontend/src/views/admin/default/components/MapCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Box } from '@chakra-ui/react';\nimport mapboxgl from 'mapbox-gl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapCard = () => {\n  _s();\n  useEffect(() => {\n    // Set your Mapbox access token here\n    mapboxgl.accessToken = 'pk.eyJ1IjoibXJjaGVlc2UyMyIsImEiOiJjbTFqbGl5b2YwYnl6MmpzZWYyYWtjYnhsIn0.-NMoLX7OlT_LAsuzQRTZSg';\n\n    // Initialize the map with the new style\n    const map = new mapboxgl.Map({\n      container: 'map',\n      // container ID\n      style: 'mapbox://styles/mrcheese23/cm1jrlnj500fj01qrgzdt46qm',\n      // Updated style\n      projection: 'globe',\n      zoom: 3,\n      center: [78, 21]\n    });\n    map.addControl(new mapboxgl.NavigationControl());\n    map.scrollZoom.disable();\n    map.on('style.load', () => {\n      map.setFog({}); // Set the default atmosphere style\n    });\n\n    // The following values control rotation speed\n    const secondsPerRevolution = 240;\n    const maxSpinZoom = 3;\n    const slowSpinZoom = 1;\n    let userInteracting = false;\n    const spinEnabled = true;\n    function spinGlobe() {\n      const zoom = map.getZoom();\n      if (spinEnabled && !userInteracting && zoom < maxSpinZoom) {\n        let distancePerSecond = 360 / secondsPerRevolution;\n        if (zoom > slowSpinZoom) {\n          const zoomDif = (maxSpinZoom - zoom) / (maxSpinZoom - slowSpinZoom);\n          distancePerSecond *= zoomDif;\n        }\n        const center = map.getCenter();\n        center.lng -= distancePerSecond;\n        map.easeTo({\n          center,\n          duration: 1000,\n          easing: n => n\n        });\n      }\n    }\n\n    // Pause spinning on interaction\n    map.on('mousedown', () => {\n      userInteracting = true;\n    });\n    map.on('dragstart', () => {\n      userInteracting = true;\n    });\n\n    // When animation is complete, start spinning if there is no ongoing interaction\n    map.on('moveend', () => {\n      spinGlobe();\n    });\n    spinGlobe();\n\n    // Cleanup on unmount\n    return () => map.remove();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    w: \"100%\",\n    h: \"600px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: \"20px\",\n    bg: \"white\",\n    id: \"map\" // This is the container for Mapbox\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(MapCard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MapCard;\nexport default MapCard;\nvar _c;\n$RefreshReg$(_c, \"MapCard\");","map":{"version":3,"names":["React","useEffect","Box","mapboxgl","jsxDEV","_jsxDEV","MapCard","_s","accessToken","map","Map","container","style","projection","zoom","center","addControl","NavigationControl","scrollZoom","disable","on","setFog","secondsPerRevolution","maxSpinZoom","slowSpinZoom","userInteracting","spinEnabled","spinGlobe","getZoom","distancePerSecond","zoomDif","getCenter","lng","easeTo","duration","easing","n","remove","w","h","display","alignItems","justifyContent","borderRadius","bg","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/atul-maurya/Downloads/GHG2/Frontend/src/views/admin/default/components/MapCard.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Box } from '@chakra-ui/react';\nimport mapboxgl from 'mapbox-gl';\n\nconst MapCard = () => {\n  useEffect(() => {\n    // Set your Mapbox access token here\n    mapboxgl.accessToken = 'pk.eyJ1IjoibXJjaGVlc2UyMyIsImEiOiJjbTFqbGl5b2YwYnl6MmpzZWYyYWtjYnhsIn0.-NMoLX7OlT_LAsuzQRTZSg';\n\n    // Initialize the map with the new style\n    const map = new mapboxgl.Map({\n      container: 'map', // container ID\n      style: 'mapbox://styles/mrcheese23/cm1jrlnj500fj01qrgzdt46qm', // Updated style\n      projection: 'globe',\n      zoom: 3,\n      center: [78, 21],\n    });\n\n    map.addControl(new mapboxgl.NavigationControl());\n    map.scrollZoom.disable();\n\n    map.on('style.load', () => {\n      map.setFog({}); // Set the default atmosphere style\n    });\n\n    // The following values control rotation speed\n    const secondsPerRevolution = 240;\n    const maxSpinZoom = 3;\n    const slowSpinZoom = 1;\n    let userInteracting = false;\n    const spinEnabled = true;\n\n    function spinGlobe() {\n      const zoom = map.getZoom();\n      if (spinEnabled && !userInteracting && zoom < maxSpinZoom) {\n        let distancePerSecond = 360 / secondsPerRevolution;\n        if (zoom > slowSpinZoom) {\n          const zoomDif = (maxSpinZoom - zoom) / (maxSpinZoom - slowSpinZoom);\n          distancePerSecond *= zoomDif;\n        }\n        const center = map.getCenter();\n        center.lng -= distancePerSecond;\n        map.easeTo({ center, duration: 1000, easing: (n) => n });\n      }\n    }\n\n    // Pause spinning on interaction\n    map.on('mousedown', () => {\n      userInteracting = true;\n    });\n    map.on('dragstart', () => {\n      userInteracting = true;\n    });\n\n    // When animation is complete, start spinning if there is no ongoing interaction\n    map.on('moveend', () => {\n      spinGlobe();\n    });\n\n    spinGlobe();\n\n    // Cleanup on unmount\n    return () => map.remove();\n  }, []);\n\n  return (\n    <Box\n      w=\"100%\"\n      h=\"600px\"\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      borderRadius=\"20px\"\n      bg=\"white\"\n      id=\"map\" // This is the container for Mapbox\n    >\n      \n    </Box>\n  );\n};\n\nexport default MapCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}